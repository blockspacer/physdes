language: cpp

os:
  - linux

services:
  - docker

compiler:
  - gcc

matrix:
  include:
    - os: linux
      dist: focal

addons:
  apt:
    sources:
    - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
      key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
    - sourceline: 'ppa:ubuntu-toolchain-r/test'
    packages:
    - cmake
    - gcc-10
    - g++-10
    - ninja-build
    update: true

env:
  global:
    - MINCONDA_VERSION="latest"
    - MINCONDA_LINUX="Linux-x86_64"
    - MINCONDA_OSX="MacOSX-x86_64"

install:
  - |
    mkdir -p $HOME/.cache
    touch $HOME/.cache/mydependency.so
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      MINCONDA_OS=$MINCONDA_LINUX;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      MINCONDA_OS=$MINCONDA_OSX;
    fi
    wget "http://repo.continuum.io/miniconda/Miniconda3-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
    export CONDA_PREFIX=$HOME/miniconda
    bash miniconda.sh -b -p $CONDA_PREFIX
    export PATH="$CONDA_PREFIX/bin:$PATH"
    export LD_LIBRARY_PATH="$CONDA_PREFIX/lib"
    hash -r
    conda config --set always_yes yes --set changeps1 no
    conda update -q conda
    conda info -a
    conda install -c conda-forge libboost fmt spdlog

script:
  - |
    if [[ "$BUILD_TYPE" == "Coverage" ]]; then
      mkdir build && cd build;
      cmake -DENABLE_COVERAGE=1 -DCMAKE_PREFIX_PATH=$CONDA_PREFIX -DCMAKE_BUILD_TYPE=Coverage -DCMAKE_SYSTEM_IGNORE_PATH=/usr/lib ..;
      make -j2
      make coverage
    else
      mkdir build && cd build;
      cmake -DBUILD_TESTS=ON -DCMAKE_PREFIX_PATH=$CONDA_PREFIX -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_SYSTEM_IGNORE_PATH=/usr/lib ..;
      make -j2
      ctest -V -j 2
    fi

after_success:
  - |
    if [[ "$BUILD_TYPE" == "Coverage" ]]; then
      lcov --list coverage_out.info.cleaned
      bash <(curl -s https://codecov.io/bash) -f coverage_out.info.cleaned || echo "Codecov did not collect coverage reports"
    fi

notifications:
  email: false
  slack:
    rooms:
      - loksu:jErzuILLSNn9qGYkkILvBwje#physdes
